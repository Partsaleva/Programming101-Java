package sortingAlgorithms;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class MergeSort {

	public static void main(String[] args) {
		List<Integer> a = Arrays.asList(2, 5, 9, 7, 1, 14, 56, 11, 4, 7);
		mergeSort(a, 0, a.size() - 1);

	}

	public static void mergeSort(List<Integer> list, int low, int high) {
		if (low < high) {
			int middle = (low + high) / 2;
			mergeSort(list, low, middle);
			mergeSort(list, middle + 1, high);
			merge(list, low, middle, high);
		}

	}

	public static void merge(List<Integer> list , int low, int middle, int high){
		List<Integer> temp=list;
		System.out.println(temp);
		int i = low;
		int j = middle+1;
		
		while(i<=middle && j <= high){
			if (temp.get(i) <= temp.get(j)) {
				list.add(temp.get(i));
				++i;
			} else {
				list.add(temp.get(j));
				++j;
			}
		}
		
		while(i <= middle){
			list.add(temp.get(i));
			++i;
		}

	}
}
