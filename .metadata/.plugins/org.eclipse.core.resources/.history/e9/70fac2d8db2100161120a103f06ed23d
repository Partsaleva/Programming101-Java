package sortingAlgorithms;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class MergeSort {

	public static void main(String[] args) {
		List<Integer>a=Arrays.asList(2,5,9,7,1,14,56,11,4,7);
		List<Integer>b =new ArrayList<Integer>();
		MergeSort(a,0, a.size(), b);

	}

	public static void mergeSort(List<Integer> A , int begin, int end, List<Integer> B){
		if(end - begin < 2){
			 return; 
		}                                                  
	    
	    int middle = (end + begin) / 2;              
	    mergeSort(A, begin,  middle, B);  
	    mergeSort(A, middle,    end, B);  
	    merge(A, begin, middle, end, B);
	    
	}
	
	
	public static void merge(List<Integer> A , int begin, int middle, int end, List<Integer> B){
		int iBegin=begin;
		int iMid=middle;
		
		for (int i = iBegin; i < end; i++){
			if (iBegin < iMid && (iMid >=end || A.get(iBegin)< A.get(iMid))) {
				B.add(A.get(iBegin));
				iBegin++;
			}else{
				B.add(A.get(iMid));
				iMid++;
			}
		}
	}
}
