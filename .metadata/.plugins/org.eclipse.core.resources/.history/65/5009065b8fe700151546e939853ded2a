package textFileCompression;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.nio.file.Path;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;

public class FileCompresion {

	public static void main(String[] args) {
		FileCompresion fileComp= new FileCompresion();
		File f=new File("comprTest");
		try {
			fileComp.compress(f);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	private Map<String, Integer> map=new HashMap<>();
	
	
	void compress(File file) throws IOException{
		int counter=-1;
		try(
		BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(file)));
		BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file.getName()+"_compr.txt")))){
			  String line;
	          while ((line = in.readLine()) != null){
	        	  String[] words=line.split(" ");
	        	  for(String word:words){	 
	        		 // map.put(word,counter);
	        		  if(map.containsKey(word)){
	        			 counter = map.get(word); 	        		 
	        		  }
	        		  else{
	        			 counter++;
	        			 
	        		  }
	        		  map.put(word,counter);
	        		  out.write("~"+map.get(word));
	        		 
	        	  }
	          }
		}
	}
	
	void compress(Path path){}
	
	
	void decompress(File file){}
	void decompress(Path path){}
}
