package sortingAlgorithms;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class MergeSort {

	public static void main(String[] args) {
		List<Integer>a=Arrays.asList(2,5,9,7,1,14,56,11,4,7);
		System.out.println(mergeSort(a, 0, a.size()-1));
		

	}

	

	public static List<Integer> mergeSort(List<Integer> list , int low, int high){
		int size = list.size();
		if (low < high) {
			int middle= (low + high)/2;
			mergeSort(list, low, middle);
			mergeSort(list, middle +1, high);
		}
	    
	}
	
	
	public static List<Integer> merge(List<Integer> A , int begin, int middle, int end){
		int iBegin=begin;
		int iMid=middle;
		List<Integer> B=new ArrayList<Integer>();
		
		for (int i = iBegin; i < end; i++){
			
			if (iBegin < iMid && (A.get(iMid) >= A.get(end) || A.get(iBegin)< A.get(iMid))) {
				
				B.add(A.get(iBegin));
				iBegin++;
				
			}else{
				
				B.add(A.get(iMid));
				iMid++;
			}
		}
		System.out.println(B);
		return B;
	}
}
