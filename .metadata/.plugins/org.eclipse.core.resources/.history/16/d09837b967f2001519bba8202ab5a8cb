package parallelCopy;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

public class ParallelCopy {

	public static void main(String[] args) {
		try {
			copyFilesAndFolders("",new File("/home/partsaleva/Documents"),new File("/home/partsaleva/Documents_copy"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public static void copyFolder(File srcFolder, File destFolder){
		if(srcFolder.isDirectory()){
			if(!destFolder.exists()){
				destFolder.mkdir();
				System.out.println("Maded destination folder: "+destFolder.getName());
			}
		}
	}
	
	private static void copyFile(final File source, final File dest) throws IOException{
		Files.copy(source.toPath(), dest.toPath());
	}
	
	private boolean isSmall(final File file){
		return file.length() < 7000000;		
	}
	
	public static void copyFilesAndFolders(String command, File srcFolder, File destFolder) throws IOException{
		copyFolder(srcFolder,destFolder);
		File[] files=srcFolder.listFiles();
		if (command.equals("-s")) {
			for (int i = 0; i < files.length; i++) {
				if (files[i].isFile()) {
					
				}
			}
		}
		else{
			for (File file: files) {
				if (file.isFile()) {
					copyFile(file, new File(destFolder+file.getName()));
				}
				else{
					copyFilesAndFolders(command, file,new File(destFolder+file.getName()));
				}
			}
		}
	}
}
