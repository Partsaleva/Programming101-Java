package managers;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Queue;

import models.Drone;
import models.Product;
import models.Warehouse;


public class DatabaseManager {

	public static void main(String[] args) {
		DatabaseManager d=new DatabaseManager();

	}

	public Warehouse addWarehouse(Warehouse w){
		Map<Product, Integer> products;
		Queue<Drone> drones;
		return w;	
	}

	private Map<Product, Integer> getProductsForDb(String warehouseId){
		Map<Product, Integer> prod=null;
		try(ObjectInputStream in =new ObjectInputStream(
				new BufferedInputStream(
						new FileInputStream("products")))){
			
			@SuppressWarnings("unchecked")
			List<Product> p=(List<Product>) in.readObject();
			for (Product product : p) {
				if (product.getWarehouseId().equals(warehouseId)) {
					prod.put(product, product.getQuantity());
				}
			}
			
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return prod;
	}
	private Queue<Drone> getDronesForDb(){
		return null;}
	 
	
	
}
