package week16;

import java.util.ArrayList;
import java.util.List;

public class Operation {

	//Add, substract and multiplicate Polynomials
	public Polynomial add(Polynomial a, Polynomial b){
		List<Member> members=new ArrayList<Member>();
		
		for (Member mem1 : a.getPolinom()) {
			for (Member mem2 : b.getPolinom()) {
				
				if(mem1==mem2){
					mem1.setMark(true);
					mem2.setMark(true);
					members.add(new Member(mem1.getCoef() + mem2.getCoef(), mem1.getDegree()));
				}
			}
		}
		for (Member member : a.getPolinom()) {
			if (member.getmark()==false) {
				members.add(member);
			}
		}
		for (Member member : b.getPolinom()) {
			if (member.getmark()==false) {
				members.add(member);
			}
		}
		return members;
		
	}
	
	public Polynomial substract(Polynomial a, Polynomial b){
		return null;
		
	}
	public Polynomial multiplicate(Polynomial a, Polynomial b){
		return null;
		
	}
	//Method for multiplicating the polynomial by a constant
	public Polynomial multiplPolynomialByConstant(int c, Polynomial p){
		return null;
		
	}
	//Method for returning the first derivative of a Polynomial
	public Polynomial getFirstDerivative (Polynomial p){
		return null;
		
	}
	//Method for evaluating a Polynomial
	public Polynomial evaluatePolynomial(Polynomial p){
		return null;
		
	}
}
