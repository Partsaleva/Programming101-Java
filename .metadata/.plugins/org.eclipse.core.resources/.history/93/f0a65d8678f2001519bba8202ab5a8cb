package parallelCopy;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;


public class ParallelCopy {

	public static void main(String[] args) {
		try {
			copyFolder("",new File("/home/partsaleva/Documents"),new File("/home/partsaleva/Documents_copy"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public static void copyFolder(String command, File srcFolder, File destFolder) throws IOException{
		if(srcFolder.isDirectory()){
			if(!destFolder.exists()){
				destFolder.mkdir();
				System.out.println("Maded destination folder: "+destFolder.getName());
			}
		}
		File[] files=srcFolder.listFiles();
        if (command.equals("-s")) {
			
		}
		else{
			for (File file: files) {
				if (file.isFile()) {
					System.out.println(file.getName());
					//Files.copy(file.toPath(),destFolder.toPath());
				}
				else if(file.isDirectory() && !file.getName().equals(destFolder.getName()) ){
					System.out.println(file.getName());
					//copyFolder(command,file,file);
				}
			}
		}
	}
	
	
	private boolean isSmall(final File file){
		return file.length() < 7000000;		
	}
	

}
